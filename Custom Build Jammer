#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

require 'libfchat/fchat'
require 'yaml'
require './deck.rb'

class Libfchat::Fchat
  attr_accessor :deck

  # Join chatrooms on invite
  def got_CIU(message)
    #Annoyingly, the json for this varies for public and private rooms.
    #So just try both and call it a day.
    self.send('JCH',message['name'])
    self.send('JCH',message['channel'])
  end
  
  # Respond to private messages
  def got_PRI(message)
  if message['message'].downcase =~ /^!deal/
      p "Dealing cards"
      msg = @deck.draw()
      self.send('PRI',message['character'],msg)
      sleep(1)
	elsif message['message'].downcase =~ /^!ver/
	 p "------"
	 msg = "Pokerbot 1.1 by Jippen Faddoul, Modified by Jammer to v1.2"
	 self.send('PRI',message['character'],msg)
	 sleep(1)
    elsif message['message'].downcase =~ /^hello/
	 p "Handshake"
	 msg = "Hello " + message['character']
	 sleep(1)
	elsif message['message'].downcase =~ /^hi/
	 p "Handshake"
	 msg = "Hello " + message['character']
	 sleep(1)
	else
      msg = "I can\'t let you do that " + message['character']
      self.send('PRI',message['character'],msg)
      sleep(1)
    end
  end
  
  # Respond to messages in chatrooms
  def got_MSG(message)
    p "------"
    if message['message'].downcase =~ /^!deal/
      msg = message['character'] + ": " + @deck.draw()
      self.send('MSG',message['channel'],msg)
	elsif message['message'].downcase =~ /^!drawe/
	  # message['message'].split(' ')
	  # message['message'].a[-1] = @value
	  # p "@value"
	  # message['message'].byteslice(-1) = @value
	  message['message'].match(/ ./) 
	  match = @value
      msg = message['character'] + ": " + @deck.drawe()
	  self.send('MSG',message['channel'],msg)
	elsif message['message'].downcase =~ /^!draw1/
	  msg = message['character'] + ": " + @deck.draw1()
	  self.send('MSG',message['channel'],msg)
	elsif message['message'].downcase =~ /^!draw2/
	  msg = message['character'] + ": " + @deck.draw2()
	  self.send('MSG',message['channel'],msg)
	elsif message['message'].downcase =~ /^!draw3/
	  msg = message['character'] + ": " + @deck.draw3()
	  self.send('MSG',message['channel'],msg)	  
	elsif message['message'].downcase =~ /^hello/
	  msg = "Hello, " + message['character']
	  self.send('MSG',message['channel'],msg)
	  sleep(1)
	elsif message['message'].downcase =~ /^hi/
	  msg = "Hello, " + message['character']
	  self.send('MSG',message['channel'],msg)
	  sleep(1)
	elsif message['message'].downcase =~ /^!slap/
	  msg = "/me slaps " + message['character'] + " around with a big fish!"
	  self.send('MSG',message['channel'],msg)
	  sleep(1)
	elsif message['message'].downcase =~ /^!mms/
	  msg = "/me transforms into an M&M cannon. Softly firing M&Ms at random."
	  self.send('MSG',message['channel'],msg)
	  sleep(1)
	end
  end
end

bot = Libfchat::Fchat.new("Pokerbot by Jippen Faddoul ( http://github.com/jippen/fchat_pokerbot_ruby )","1.0")
config = YAML.load_file('pokerbot.yaml')

bot.deck = Deck.new()
bot.login(config['server'],config['username'],config['password'],config['character'])
